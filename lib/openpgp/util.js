// Generated by IcedCoffeeScript 1.6.3-g
(function() {
  var calc_checksum, encode_length;



  exports.make_time_packet = function(d) {
    var b;
    d || (d = Math.floor(Date.now() / 1000));
    b = new Buffer(4);
    b.writeUInt32BE(d, 0);
    return b;
  };

  exports.calc_checksum = calc_checksum = function(text) {
    var i, ret, _i, _ref;
    ret = 0;
    for (i = _i = 0, _ref = text.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      ret = (ret + text.readUInt8(i)) % 65536;
    }
    return ret;
  };

  exports.encode_length = encode_length = function(l) {
    var ret;
    ret = null;
    if (l < 192) {
      ret = new Buffer(1);
      ret.writeUInt8(l, 0);
    } else if (l >= 192 && l < 8384) {
      ret = new Buffer(2);
      ret.writeUInt16BE((l - 192) + (192 << 8), 0);
    } else {
      ret = new Buffer(5);
      ret.writeUInt8(0xff, 0);
      ret.writeUInt32BE(l, 1);
    }
    return ret;
  };

  exports.bufeq_fast = function(x, y) {
    var i, _i, _ref;
    if (x.length !== y.length) {
      return false;
    }
    for (i = _i = 0, _ref = x.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      if (x.readUInt8(i) !== y.readUInt8(i)) {
        return false;
      }
    }
    return true;
  };

  exports.bufeq_secure = function(x, y) {
    var check, i, ret, _i, _ref;
    ret = true;
    if (x.length !== y.length) {
      ret = false;
    } else {
      check = 0;
      for (i = _i = 0, _ref = x.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        check += x.readUInt8(i) ^ y.readUInt8(i);
      }
      ret = check === 0;
    }
    return ret;
  };

}).call(this);
