// Generated by IcedCoffeeScript 1.6.3-g
(function() {
  var K, PrivateKey, PublicKey, parse, unbox, _ref;



  _ref = require('./key'), PublicKey = _ref.PublicKey, PrivateKey = _ref.PrivateKey;

  unbox = require('../encode').unbox;

  K = require('../const').kb;

  parse = function(raw) {
    var err, packets, res, ret, _ref1;
    ret = null;
    _ref1 = unbox(raw), err = _ref1[0], res = _ref1[1];
    if ((err == null) && (res.genre !== K.genres.message)) {
      err = new Error("cannot unbox message");
    }
    if (err == null) {
      packets = res.obj;
      ret = (function() {
        switch (res.type) {
          case K.message_types.public_key:
            return new PublicKey({
              packets: packets
            });
          case K.message_types.private_key:
            return new PrivateKey({
              packets: packets
            });
          default:
            err = new Error("Cannot decode message type " + res.type);
            return null;
        }
      })();
    }
    return [err, ret];
  };

  exports.parse = parse;

}).call(this);
