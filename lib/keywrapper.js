// Generated by IcedCoffeeScript 1.6.3-g
(function() {
  var C, KeyWrapper, Lifespan, Primary, Subkey,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };



  C = require('./const');

  Lifespan = (function() {
    function Lifespan(_arg) {
      this.generated = _arg.generated, this.expire_in = _arg.expire_in;
      this.expire_in || (this.expire_in = C.default_key_expire_in);
    }

    return Lifespan;

  })();

  KeyWrapper = (function() {
    function KeyWrapper(_arg) {
      this.key = _arg.key, this.lifespan = _arg.lifespan;
    }

    KeyWrapper.prototype.kid = function() {
      return this.key.kid();
    };

    KeyWrapper.prototype.ekid = function() {
      return this.key.ekid();
    };

    return KeyWrapper;

  })();

  Subkey = (function(_super) {
    __extends(Subkey, _super);

    function Subkey(_arg) {
      var key, lifespan;
      key = _arg.key, this.desc = _arg.desc, lifespan = _arg.lifespan, this.primary = _arg.primary;
      Subkey.__super__.constructor.call(this, {
        key: key,
        lifespan: lifespan
      });
    }

    return Subkey;

  })(KeyWrapper);

  Primary = (function(_super) {
    __extends(Primary, _super);

    function Primary(_arg) {
      var key, lifespan;
      key = _arg.key, lifespan = _arg.lifespan;
      Primary.__super__.constructor.call(this, {
        key: key,
        lifespan: lifespan
      });
    }

    return Primary;

  })(KeyWrapper);

  exports.Lifespan = Lifespan;

  exports.Subkey = Subkey;

  exports.Primary = Primary;

}).call(this);
