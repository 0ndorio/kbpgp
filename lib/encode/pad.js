// Generated by IcedCoffeeScript 1.6.3-g
(function() {
  var C, SHA512, emsa_pkcs1_encode, hash_headers, nbs;



  SHA512 = require('../hash').SHA512;

  C = require('../const').openpgp;

  nbs = require('../bn').nbs;

  hash_headers = {
    SHA1: [0x30, 0x21, 0x30, 0x09, 0x06, 0x05, 0x2b, 0x0e, 0x03, 0x02, 0x1a, 0x05, 0x00, 0x04, 0x14],
    SHA224: [0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x04, 0x05, 0x00, 0x04, 0x1C],
    SHA256: [0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x04, 0x20],
    SHA512: [0x30, 0x51, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x03, 0x05, 0x00, 0x04, 0x40]
  };

  exports.emsa_pkcs1_encode = emsa_pkcs1_encode = function(data, len, opts) {
    var buf, hash, headers, i, n;
    if (opts == null) {
      opts = {};
    }
    hash = opts.hash || SHA512;
    headers = hash_headers[hash.algname];
    n = len - headers.length - 3 - hash.output_length;
    buf = Buffer.concat([
      new Buffer([0x00, 0x01]), new Buffer((function() {
        var _i, _results;
        _results = [];
        for (i = _i = 0; 0 <= n ? _i < n : _i > n; i = 0 <= n ? ++_i : --_i) {
          _results.push(0xff);
        }
        return _results;
      })()), new Buffer([0x00]), new Buffer(headers), hash(data)
    ]);
    return nbs(new Uint8Array(buf), 256);
  };

}).call(this);
